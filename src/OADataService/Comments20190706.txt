Для создания сервиса данных, я использовал шаблон Web Api. Предполагаю, что сдесь будет развернуто 
два сервиса: сервис доступа к документам и сервис базы данных. Сервис доступа к документам будет 
предоставлять документы для работы клиентов, напр. фотки, видео, аудио, плоский текст, XML, JSON. 
Соответственно, HTTP MIME ContentType будет: 
text/plain, text/json, text,xml
image/jpeg, video/..., audio/mp3

Тексты будут иметь кодировку UTF-8

Для начала, сделаю получение изображений. 


Другие документы (пока) 

### 20190707 08:31
Приехал на побывку домой и начал разработку. Еще вчера я пробовал делать контроллер документов DocsController. Суть контроллера - почти 
соответствует REST. Это хранимое множество документов разного типа. Думаю можно следовать идеям REST. В частности, доступ к хранимым 
документам будет выглядеть как-то так: 
http://domain.ext/OAData/docs/img - для выдачи всех
http://domain.ext/OAData/docs/img/uri - для выдачи одного

Кроме того, будет загружаться конфигурация. 
А еще будут загружаться и уничтожаться документы. Для некоторых действий понадобится авторизация. Авторизацию можно реализовывать с 
помощью кукиз. Но это - потом. 

Файлы могут быть любыми. Файловые сборки пока не поддерживаются. Специальный тип касается того, что выводится отдельно и, возможно, 
в подгружается браузером. Попробую pdf. ... Попробовал, работает. Буду действовать постепенно. Все начинается с конфигуратора. Создам 
класс Configuration и загружу конфигуратор. Пока никаких особых манипуляций с конфигуратором делать не буду.

Файл конфигуратора загрузил. Также сделал страницу по умолчанию. Потом можно будет к этой странице вернуться...

Теперь сделаю и загружу структуры помогающие доступу к кассетам и фог-документам.

### 20190708 13:16
Сделал ввод данных из кассет. Формируется массив информации о кассетах и другой массив информации о фог-документах. 
Надо будет сделать фиксацию проблем загрузки кассет и диагностику на диагностической странице. Вообще, пока нет 
концепции управления сервисом, надо будет разработать. Двинусь в сторону получения документа.

Теперь испытал последнюю из неопробованных возмжностей: получение документа. Все работает, хотя остаются вопросы. 
В частности, вопросом является как именовать полученный файл. Было бы замечательно этот вопрос унифицировать. Так,
чтобы у любого файла из архива, было уникальное имя. Может, что-то такое и будет. Напр. длинное имя можно сжать и 
превратить в какой-то идентификатор. Но так, чтобы по идентификатору, можно было бы восстановить uri документа. Пока
я на этом вопросе останавливаться не буду. 

Теперь надо сделать получение основных документов. В частности, фотки и фог-файла. Вообще, REST диктует иметь методы,
перечисленные выше. Все фотки выдавать нет необходимости, выдам одну. Попробую также научиться задавать дополнительный 
параметр. 

### 20190709 07:53
Попробовал, все получилось. Я затратил слишком много времени на адаптацию к идеям REST. В нынешнем варианте - не получается
У меня uri сформировано с использованием слешей, это мешает их использованию в конструкции типа http://domain.ext/OAData/docs/img/uri 
Попытка закодировать uri - пока не получается. В частности, использованию компрессора мешает малая длина. Из строки uri 
длиной в 32 байта можно получить после zip'а 144 байта, так что путь закрыт. Буду использовать нормальные параметры. 

Еще одна неприятность - в тестовой кассете SypCassete. Там нет типоразмера normal. Попробую посмотреть что можно сделать. 
Можно сделать специальный административный программируемый интерфейс и просто сделать фотки нужного размера из существующих.
С помощью LINQ-выражений. Пока его можно наметить в сервисе. Тем более, что именно там будут преобрабатываться документы.

В общем, поработал, но как-то не нацеленно... В частности, снова поискал способ работы с имиджами. Фактически вернулся к решениям 
базовой библиотеки. Пока такие решения меня удовлетворяют. Другие как-то даже не запускаются. Теперь сделаю небольшое продвижение 
к проекту. Декларирую метод котроллера:
```
```

Итак, я сделал основу сервиса данных. Он хранит важную информацию для быстрого доступа к данным. Он обеспечивает доступ к документам
по uri. Так что можно уже начинать обслуживать прикладные интерфейсы.

### 20190710 07:43
Можно и нужно продолжать. И я знаю в каком направлении. Мне нужен полноценный сервис данных. Он состоит из репозитория документов,
доступных по некоторому uri, и базы данных, предоставляющих данные по идентификатору. Возможно, еще и по формату. И репозиторий 
документов и база данных способны к добавлению и изменению данных. Изменения в базе данных первично, поскольку его можно выполнять 
не меняя структуры репозитория. База данных формируется из совокупности всех задействованных фог-документов. Фог-документы содержат
идентифицированные записи. База данных изменяется посредством добавления записей. Записи имеют отметку времени mT и более поздние
по времени записи "заслоняют" более ранние. Большая часть изменений в данных может производиться в динамике работы сервиса. Однако
есть еще и перезагрузка сервиса. Ее можно и нужно делать в определенных случаях. Во-первых, перезагрузку надо делать регулярно для 
того, чтобы не накапливались большие динамические структуры, связанные с обновлением данных. Во-вторых, есть действия с репозиторием
и данными, которые не воспроизводятся в базе данных автоматически. Например, изменение состава репозитория, "ручные" воздействия на 
репозиторий, ручные воздействия на записи данных. Система сделана так, чтобы вручную можно было бы сделать "все" не нарушащее 
синтаксическую структуру данных. И не нарушающее структуру кассетного хранилища. Но в будущем, набор "ручных" действий будет 
регламентирован и автоматизирован. 

Перезагрузка создает по-новой динамические структуры, помогающие осуществлять доступ к репозиторию и к данным. Динамическая структура
к данным, называется текущей базой данных. База данных, в общем случае, состоит из формируемой структуры записей и индексов. А также 
структур, формируемых в оперативной памяти. Есть более "легковесный" процесс запуска репозитория и базы данных, его можно назвать 
подключением. Это, напр. когда сервер перезапускался и надо запустить сервис. И есть более "тяжелый" процесс с формированием новой 
текущей базы. Этот процесс называем перезагрузкой и он может длиться довольно долго (сейчас секунды и десятки секунд, с ростом данных -
еще дольше). С точностью до завершения процессов записи в файлы репозитория, перезагрузку можно инициировать в любой момент времени.    

Пора приступить хоть к каким-то действиям. Попробую сделать загрузку базы данных. 

### 20190711 22:08
Так и не приступил... Вообще, голова тяжелая и медленная...

Сейчас уже понятно, что кусок 2019 года я в базу данных вряд ли сделаю в течение школы. Может после школы... Только кто будет описывать 
хотя бы фотографии? Буду думать о будущем. Сегодня решил, что одним из возможных вариантов испытания/использования сервиса, может быть
старая схема раскрытия айтема. Узел раскрывается на нулевом уровне - это просто запись. Следующий (первый) уровнень раскрытия включает
в себя обратные и прямые записи. Только надо блокировать прямые ссылки, соответствующие обратным ссылкам. Это как всегда. Но это - потом.
Сначала сервис. Сначала сервис без изменения данных. Это я могу написать легко. 

### 20190716 10:44
Время московское! Я уже в Москве и собираюсь на совещание с адвокатом. Пока я отказался продолжать работать в направлении Blazor - 
подожду когда технология устоится, когда будет больше примеров. Вроде я нащупал причину неработающего Http-соединения. Это какие-то
credentials. Наверное, это разрешения. Не буду тратить время и мозги на эти вопросы. Сейчас самое главное - сервис и перевод на сервис
старой тургунды. А может, и новой. С сервисо опять же есть много новых идей, но пока придется ограничить себя в этом творчестве. 
Но раз уж упомянул, коротко напишу про последнюю идею, это мне пришло в голову в самолете. Идея заключается в том, чтобы записывать 
новые записи дописыванием, а не как сечас новой записью всего фог-файла. Технически, это возможно, например перейдя к вариантам 
отдельных триплетов или записей. Но есть еще каунтер. Он в эту схему не учень укладывается. Есть несколько вариантов решения. Первый -
каунтер выделить в отдельный файл как у Пети. Второй - каунтер, как и другую мета информацию сделать специальной записью и постоянно 
переписывать, изменяя mT. Третий - каунтер не менять, пользоваться временной базой данных. В общем, есть над чем подумать. Пока я все
это отложу и буду реализовывать "старый" вариант. Когда фог-файл - это специфический RDF, когда у этого RDF-а есть специальные атрибуты,
главные из готорых - owner, prefix, counter. Кстати, можно было бы вообще отказаться от каунтера в пользу UID или использовать время в
качестве каутнтера. А что? Если брать миллисекунды, то десяток лет - это разрядов 42 в тиках, т.е. 36 символов. Что-то многовато. Может
округлить до секунд? Все, временно забываю!

Сначала репозиторий документов. Пусть он будет таким, каким его запроектировал Петя. Ну и мои добавления тоже не лишни. В частности,
параметры для вычисления фото и видео превьюшек кажется нужны. Хотя и не факт... У репозитория будет ряд методов доступа. Сначала - 
методы чтения. Каждый документ имеет свой uri и доступ к контенту документа выполняется по uri. 

20190717 04:33
Что-то не спится... Вернусь к разработке.

Какие документы мы можем хранить в репозитории и получать из него? Есть просто документы, можно сказать файлы, а есть специальные
виды документов. Набросаю доступ к документам:
```
/Docs/GetDoc?u=uri
/Docs/GetImage?u=uri&s=size (small, medium, normal или параметр отсутствует, тогда оригинал)
/Docs/GetVideo?u=uri
/Docs/GetPdf?u=uri
/Docs/GetXml?u=uri
/Docs/GetHtml?u=uri
```
Причем GetDoc является универсальным методом и через него можно получить оригинал документа любого типа. Попробую начать именно с
него. 

Первые два метода сделал и испытал. Хорошо бы сделать и испытать получение видео. Попробую, может получится. Только надо найти видео
в кассетах. Вроде что-то заработало. Потом еще проверю. Остались простые варианты, PDF, XML, HTML. Пока они не слишком актуальны. 
Это можно сделать потом. 

Теперь посмотрю что там у меня с базой данных, вроде работает...

### 20190720 09:47
Вот вернулся из Москвы, вчера все пытался переделать побольше дел, сегодня, в субботу, можно попробовать поработать. 

Я "застрял" на попытке сделать какой-то адаптер сервиса. Продолжу. 

И вот, к вечеру, могу сказать, что сделал Тургунду с опорой на сервис. Работает! Хотя и без редактирования. 

### 20190721 05:41
Попробую "по инерции" сделать и редактирование. Хотя бы оценю объем работы. 

Начну с Тургунды7. Там много эксперимента по "быстрой" генерации html страниц, но кажется, это не должно мешать. Там еще 
есть всякая "бяка" по сохранению состояния, но опять же это не должно быть помехой. Кажется... Дествую по шагам.

Шаг 1. Делаю пустую рабочую область. Нет загруженных кассет. Запускаю Тургунду 7. Сразу - облом. Я наделал некоторых изменений,
которыми приходится управлять непосредственно в коде. Это плохо, но надо работать. Привел в порядок, сумел запустить "пустое" приложение.
Авторизовался по существующей простой процедуре. Роли почему-то нет. Наверное, слишком все упростил... Попытка завести кассету
оказалась неудачной. Диагностика: "Кассеты может создавать только администратор". Надо смотреть код авторизации.

Что-то "закапываюсь", это не хорошо. Можно попробовать другой путь. Кассеты делать менеджером и сразу установить сетевую конфигурацию. 
Попробую.

Дело идет, хотя и как всегда, медленно. Исправил ошибку в сравнении с пустой строкой. Хотя может и не исправил, а вставил "костыль".
Опять застрял в раздумье о структуризации. В сервисе я разделяю хранилище данных и адаптер (контролер) базы данных. Хранилищ может
быть несколько, а база данных - пока одна и сформируется из всех задействованных в конфигурации (в конфигурациях) данных и метаданных. 
Меня волнует, что технически, база данных, точнее ее адаптер, подсоединяется полем к хранилищу или конфигурации. 

Итак, пусть требуется редактировать данные. В части именно базы данных, все достаточно просто - добавляется ТОЛЬКО один метод добавления
записи. Причем запись может добавляться с идентификатором или без. В последнем случае, база данных генерирует идентификатор. Запись 
приходит откуда-то, что после этого? В записи есть два добавленных извне системных поля. Это владелец и отметка времени.

Еще один вопрос периодически возникает: почему я выборки делаю через остовное дерево, а редактирование - напрямую, через запись. 
В принципе, можно сохранить формитное представление, напр. 
```
<record id="..." type="тип элемента">
  <field prop="свойство">значение</field>
  <direct prop="свойство" ref="ссылка" /> или
  <direct prop="свойство">
    <record id=""/>
  </direct>
</record>
```
Вообще-то мне приходится делать преобразование в неудобном месте. Можно добавить элементы <isnull/> и атрибуты mT и owner.
Или можно формировать запись из триплетов...

### 20190722 06:48
Отбрасываю сомнения, продолжаю работать. Во-первых, надо "докопаться" до вызова главной редактирующей процедуры.

### 20190723 07:27
Вчера кое-что сделал. Но, в основном, с утра. Потом занимался чем попало, потом устал... 

Я не могу сложить картинку сервиса. В части редактирования. Видимо надо реализовывать старую кортинку. В старой картнке нет 
распределенности. Соответственно, весь сервис это и репозиторий и база данных. Допустим, это так. Вот приходит запись через
PutItem(xrecord), где xrecord - расширенная полями owner и mT запись. По владельцу, мы выявляем fog-файл, годный для вставки,
если он еще не загружен, загружаем его, если нет идентификатора, то генерируем новый, изымаем владельца из записи, находим подходящий 
элемент и заменяем его или просто добавляем, сохраняем файл по месту, возвращаем копию сохраненного элемента. Посему бы так и не 
сделать?

20:25

Оказалось, что я не доделал хранилище триплетных записей, наверное как и траплетное хранилище. Нет слабой динамики. Все не так 
очевидно, поэтому придется восстанавливать рассуждения и логику. Итак (!), пусть есть последовательность записей. В принципе, все
записи в последовательности имеются, это начальный принцип. Далее, есть произвольное число индексов, построенных на какой-то 
начальный момент времени. И есть некоторый список добавленных к последовательности элементов. Это дублирование, но пусть будет так. 
Индексами "покрывается" некоторое предыдущее состояние. Для правильной индексации, нужно использовать динамический список. 
В принципе, дианмический список можно использовать сканируя и вычисляя соответствующие функции. Но, кажется, пока сделано не так.
Сделано так, что у каждого индекса формируется свой динамический список в форме, удобной именно этому индексу. И добавление элемента 
в последовательность приводит к запуску хендлеров в индексах. Надо посмотреть какие решения заложены в текущую реализацию хранилища. 

Все же удалось сдвинуться с "мертвой точки" - что-то стало работать в командах редактирования в связке клиент-сервис. 







