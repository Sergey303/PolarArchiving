@page "/viewer"
@using System.Xml.Linq
@using BlazorApp1.Data
@inject ViewerService VService

<h3>Viewer</h3>
<form onsubmit="return false;" action="">
    <input type="text" @bind="searchstring" />
    <input type="submit" @onclick="SearchAsync" value="Искать" />
    <button @onclick="SearchAsync">Искать</button>
</form>

@if (xresult != null) foreach (XElement elem in xresult.Elements())
    {
        string tp = elem.Attribute("type").Value;
        string label;
        if (labels.TryGetValue(tp, out label)) { }
        else label = tp;
        string id = elem.Attribute("id").Value;
        //string name = elem.Elements("record")
        //    .Where((XElement r) => r.Name == "field")
        //    .FirstOrDefault()?.Value;
        string name = elem.Value;
<div>
    @*<span>@label</span> <a href="portrait?id=@id">@name</a>*@
    @*<span>@label</span> <a @onclick:preventDefault @onclick='Portrait' href="">@name</a>*@
    <span>@label</span> <a @onclick:preventDefault @onclick='@(e => UpdatePortrait(e, id))' href="">@name</a>
</div>
    }
@if (xtree != null)
{
    <p />
    <div>
        Портрет!!! @xtree.ToString();
    </div>

}

@code {
    private string searchstring { get; set; }
    private XElement xresult;

    private Dictionary<string, string> labels = new KeyValuePair<string, string>[]
    {
        new KeyValuePair<string, string>("http://fogid.net/o/person", "персона"),
        new KeyValuePair<string, string>("http://fogid.net/o/org-sys", "орг"),
        new KeyValuePair<string, string>("http://fogid.net/o/document", "док"),
        new KeyValuePair<string, string>("http://fogid.net/o/photo-doc", "фото"),
        new KeyValuePair<string, string>("http://fogid.net/o/collection", "коллекция"),
            }.ToDictionary(x => x.Key, x => x.Value);

    //protected override async Task OnInitializedAsync()
    //{
    //    xresult = await VService.GetItemAsync("пупкин");
    //}
    private async Task SearchAsync()
    {
        xresult = await VService.SearchAsync(searchstring);
    }
    XElement xtree = null;

    private async Task UpdatePortrait(MouseEventArgs e, string id)
    {
        searchstring = null;
        xresult = null;
        xtree = await VService.GetItemAsync(id);
    }

}
